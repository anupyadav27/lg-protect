{
  "Compliance Name": "pci_3.2.1_aws",
  "ID": "4.1.g",
  "Name": "For TLS implementations, examine system configurations to verify that TLS is enabled whenever cardholder data is transmitted or received",
  "Description": "For example, for browser-based implementations HTTPS appears as the browser Universal Record Locator (URL) protocol, and cardholder data is only requested if HTTPS appears as part of the URL. Sensitive information must be encrypted during transmission over public networks, because it is easy and common for a malicious individual to intercept and/or divert data while in transit. Secure transmission of cardholder data requires using trusted keys/certificates, a secure protocol for transport, and proper encryption strength to encrypt cardholder data. Connection requests from systems that do not support the required encryption strength, and that would result in an insecure connection, should not be accepted. Note that some protocol implementations (such as SSL, SSH v1.0, and early TLS) have known vulnerabilities that an attacker can use to gain control of the affected system. Whichever security protocol is used, ensure it is configured to use only secure versions and configurations to prevent use of an insecure connection—for example, by using only trusted certificates and supporting only strong encryption (not supporting weaker, insecure protocols or methods). Verifying that certificates are trusted (for example, have not expired and are issued from a trusted source) helps ensure the integrity of the secure connection. Generally, the web page URL should begin with HTTPS and/or the web browser display a padlock icon somewhere in the window of the browser. Many TLS certificate vendors also provide a highly visible verification seal—sometimes referred to as a security seal, secure site seal, or secure trust seal)—which may provide the ability to click on the seal to reveal information about the website. Refer to industry standards and best practices for information on strong cryptography and secure protocols (e.g., NIST SP 800-52 and SP 800-57, OWASP, etc.) Note: SSL/early TLS is not considered strong cryptography and may not be used as a security control, except by POS POI terminals that are verified as not being susceptible to known exploits and the termination points to which they connect as defined in Appendix A2.",
  "Function Name": "cloudfront_distributions_using_deprecated_ssl_protocols",
  "clients": ["cloudfront"],
  "functions": {
    "cloudfront": {
      "method": "list_distributions",
      "field_path": "DistributionList.Items[].ViewerCertificate.MinimumProtocolVersion"
    }
  },
  "evaluation": {
    "type": "find",
    "source_client": "cloudfront",
    "field": "MinimumProtocolVersion",
    "value": "SSLv3"
  }
}

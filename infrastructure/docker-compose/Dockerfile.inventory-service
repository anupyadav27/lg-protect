FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY services/inventory-service/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy shared dependencies first
COPY shared ./shared
COPY events ./events

# Copy application code
COPY services/inventory-service/ .

# Create logs directory with proper permissions
RUN mkdir -p /app/logs && \
    mkdir -p /app/logs/services/inventory-service && \
    mkdir -p /app/logs/api && \
    mkdir -p /app/logs/auth && \
    mkdir -p /app/logs/audit && \
    mkdir -p /app/logs/compliance && \
    mkdir -p /app/logs/security && \
    mkdir -p /app/logs/database && \
    mkdir -p /app/logs/events && \
    mkdir -p /app/logs/monitoring/performance && \
    mkdir -p /app/logs/monitoring/health && \
    mkdir -p /app/logs/monitoring/errors && \
    mkdir -p /app/logs/application && \
    mkdir -p /app/logs/nginx && \
    mkdir -p /app/logs/archived && \
    chmod -R 755 /app/logs

# Set environment variables for logging
ENV LOG_LEVEL=INFO \
    DEBUG_MODE=false \
    LOG_MAX_SIZE_MB=50 \
    LOG_BACKUP_COUNT=10 \
    ENABLE_AUDIT_LOGGING=true \
    ENABLE_COMPLIANCE_LOGGING=true \
    ENABLE_SECURITY_LOGGING=true \
    ENABLE_PERFORMANCE_LOGGING=true \
    PYTHONPATH=/app

# Expose port
EXPOSE 3000

# Health check with centralized logging
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Run the application
CMD ["python", "src/main.py"]
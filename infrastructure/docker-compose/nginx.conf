events {
    worker_connections 1024;
}

http {
    upstream api_gateway {
        server api-gateway:8000;
    }

    upstream inventory_service {
        server inventory-service:3000;
    }

    upstream compliance_service {
        server compliance-service:3001;
    }

    upstream data_security_service {
        server data-security-service:3002;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=health:10m rate=30r/s;

    server {
        listen 80;
        server_name localhost;

        # Enable gzip compression
        gzip on;
        gzip_types text/plain application/json application/javascript text/css application/xml text/xml;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Main API Gateway (recommended approach)
        location / {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Health checks (high rate limit)
        location ~ ^/(health|status) {
            limit_req zone=health burst=10 nodelay;
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Direct service access (for debugging - remove in production)
        location /direct/inventory/ {
            limit_req zone=api burst=5 nodelay;
            rewrite ^/direct/inventory/(.*) /$1 break;
            proxy_pass http://inventory_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /direct/compliance/ {
            limit_req zone=api burst=5 nodelay;
            rewrite ^/direct/compliance/(.*) /$1 break;
            proxy_pass http://compliance_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /direct/data-security/ {
            limit_req zone=api burst=5 nodelay;
            rewrite ^/direct/data-security/(.*) /$1 break;
            proxy_pass http://data_security_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Monitoring endpoints
        location /nginx_status {
            stub_status on;
            allow 172.20.0.0/16;  # Only allow from docker network
            deny all;
        }
    }

    # HTTPS configuration (when SSL certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
    #
    #     location / {
    #         proxy_pass http://api_gateway;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}